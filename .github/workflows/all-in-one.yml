name: auto release demo
on:
  push:
    tags-ignore: 
      - '**'
    # mainブランチにコミットがpushされたときに限定
    branches:
      - main
    # 上記条件に加えてgenディレクトリ配下が変更されたときのみという条件を追加
    # paths:
    #   - gen/**
jobs:
  auto-release:
    runs-on: ubuntu-latest
    env:
      # https://github.community/t/github-action-trigger-on-release-not-working-if-releases-was-created-by-automation/16559
      GITHUB_USER: ${{ secrets.EXT_GITHUB_USER }}
      # GITHUB_TOKEN: ${{ secrets.EXT_GITHUB_PAT }}
      RELEASE_IT_VERSION: 14.14.0
    steps:
      - name: Check out codes
        uses: actions/checkout@v2
        # with:
          # fetch-depth: 0
          # token: ${{ secrets.EXT_GITHUB_PAT }}
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
          scope: '@kkuwa'
      - name: Set releaser settings
        run: |
          git config --global user.name ${{ secrets.EXT_GITHUB_USER }}
          git config --global user.email ${{ secrets.EXT_GITHUB_EMAIL }}
      - name: Major release
        id: major
        if: contains(toJSON(github.event.commits.*.message), 'bump up version major')
        run:  npx release-it@${RELEASE_IT_VERSION} -- major --ci
      - name: Minor release
        id: minor
        # メジャーバージョンアップをしていないときマイナーバージョンアップを行なうか
        if: steps.major.conclusion == 'skipped'  && contains(toJSON(github.event.commits.*.message), 'bump up version minor')
        run:  npx release-it@${RELEASE_IT_VERSION} -- minor --ci
      - name: Patch release
        # コミットメッセージに特に指定がなく、かつバージョン更新コミットでない場合（ループ抑止）はマイナーバージョンを更新する
        if: "!(steps.major.conclusion == 'success' || steps.minor.conclusion == 'success') && !contains(toJSON(github.event.commits.*.message), '[automate_versioning] Release')"
        run:  npx release-it@${RELEASE_IT_VERSION} -- patch --ci
      # NPM
      # - name: Setup Node
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: '16'
      #     registry-url: 'https://registry.npmjs.org'
      #     scope: '@kkuwa'

      - name: build
        run: npm run build

      - name: release
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      # github
      - name: bundle
        env:
          WORK_DIR: ${{ github.workspace }}
        run: |
          tar czf - lib > $WORK_DIR/bundle.tar.gz

      - name: Set TAG
        run: |
          echo 'TAG_NAME<<EOF' >> $GITHUB_ENV
          git describe --tags >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: bundle.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "${{ env.TAG_NAME }}"
          allowUpdates: true
      
      # dockerhub
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: kkuwa/my-automatebuild-test
          tags: |
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}